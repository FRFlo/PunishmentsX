#
# Config.yml - PunishmentsX
# Made with love by Cowings and FRFlo.
#
# MIT License - https://github.com/FRFlo/PunishmentsX/blob/main/LICENSE
#

DATABASE:
  #Recommend using MongoDB rather than MySQL/SQLite (Required for storing data).
  #Redis is required for cross server synchronization.

  # You can use either "mongo", "sqlite", or "mysql" (Must use 1 of them) - SQLite works without setup.
  USE: "sqlite"

  # MongoDB Fields - only applied if 'USE' option is set to "mongo"
  MONGO:
    LOCALHOST_NO_AUTH: false # Only use this if you know what it is, this will replace URI if enabled.
    URI: "mongodb://user:pass@127.0.0.1/punishments"
    DB: "punishments"

  # MySQL/MariaDB Fields - only applied if 'USE' option is set to "mysql"
  MYSQL:
    HOST: "127.0.0.1"
    PORT: 3306
    USER: "user"
    PASSWORD: "password"
    DATABASE: "punishments"

  # Redis is completely optional (plugin will work without it).
  # If enabled, all servers connected will be in sync.
  REDIS:
    ENABLED: false
    HOST: "127.0.0.1"
    PORT: 6379
    CHANNEL: "punishments"

GENERAL:
  SERVER_NAME: "Unspecified" # Example: lobby, kitpvp, factions, etc
  ONLINE_MODE: true
  CONSOLE_NAME: "CONSOLE"

  # REGULAR Example: Tue May 31 23:13:07 GMT 2022
  # AMERICAN Example: 5/31/2022 23:13:07 GMT
  # EUROPEAN Example: 31/5/2022 23:13:07 GMT

  # This is the date format that will be used for the history menu.
  DATE_FORMAT: "REGULAR"

  # Webhooks notify to a channel whenever a punishment/unpunishment is executed on the server.
  DISCORD_WEBHOOK:
    ENABLED: false

    # https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks
    # Read that to figure out how to use discord webhooks.
    LINK: ""

    # Webhook's profile picture
    AVATAR: "https://i.pinimg.com/originals/fe/43/35/fe4335a9ced740248c304e8ad83cc8ea.jpg"

    # These are both used for the footer of the notification
    SERVER_ICON: "https://img1.pnghut.com/7/17/8/squXjkt4pT/internet-media-type-texture-mapping-video-game-minecraft-pocket-edition-table.jpg"
    SERVER_DOMAIN: "YourServer.com"

# Advanced chat filter built into the plugin
FILTER:

  # None of the options below will do anything if this is disabled.
  ENABLED: true

  # When these words are seen, they are blocked.
  # Advanced option means that the filter will check for common bypasses
  # Example: sh1t will still be blocked because the filter knows "1" is the same as "i"
  ADVANCED: true

  # Unicode characters are very commonly used by hacked clients to bypass filters.
  # Recommended to keep this option as true in order for the filter to work.
  BLOCK_UNICODE: false

  BLACKLISTED_WORDS:
    ENABLED: true
    PUNISHMENT_ENABLED: true # If true, it will punish the player from the stack, if false, it will just block the message.
    PUNISHMENT_STACK: "FOUL_LANGUAGE" # Use the identifier
    PUNISHMENT_SILENT: true
    LIST:
      - "fuck"
      - "shit"
      - "otherbadwords"

  # If these 2 words are in the same message, it is blocked.
  NEGATIVE_WORD_PAIR:
    ENABLED: true
    PUNISHMENT_ENABLED: true
    PUNISHMENT_STACK: "FOUL_LANGUAGE"
    PUNISHMENT_SILENT: true
    SERVER_WORD: "server"
    NEGATIVE_WORDS:
      - "trash"
      - "bad"
      - "awful"

  # All links other than whitelisted ones will be blocked if enabled.
  ANTI_ADVERTISING:
    ENABLED: true
    PUNISHMENT_ENABLED: true
    PUNISHMENT_STACK: "ADVERTISING"
    PUNISHMENT_SILENT: true
    WHITELISTED_LINKS:
      - "youtube.com"
      - "youtu.be"
      - "twitter.com"
      - "twitch.tv"
      - "yourserverwebsite.com"

#
# Anti-Evasion detailed explanation:
#
# Plugin creates an "ip-list" for every player that lists all the IPs they log in with.
# Plugin creates an "ip-profile" that for every IP address that lists all players that have logged on with that IP.
#
# When player logs in, it will go to the "ip-list" and check each IP's "ip-profile".
# For each "ip-profile" it will check the accounts associated with the "ip-profile"
# If any of those accounts have an active ban/blacklist, the plugin will know the player is ban evading.
#
# Long-Arms explanation:
#
# After initial checks, it will check each account's "ip-list".
# It will get the "ip-profile" of each IP in the "ip-list" and run all the aforementioned checks.
# If it finds any active bans/blacklists on one of these accounts, the plugin will know the player is ban evading.
#
# Long-arms is stable and working, but is not recommended because 90% of evaders get caught by first check.
#
# This only works for MongoDB users. SQL support coming soon.
#
ANTI_EVASION:
  ENABLED: false
  LONG_ARMS: false

#
# The End!
#

